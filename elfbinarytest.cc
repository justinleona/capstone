#include <bits/stdc++.h>
#include "catch.hpp"
#include "elfbinary.h"

using namespace std;

TEST_CASE( "ElfBinary loads headers", "[elfbinary]") {
  // in vim we get this with s/\(..\)/0x\1,/ on the encoded blob from xxd
  char s[]{
      0x7f,0x45,0x4c,0x46,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x03,0x00,0x3e,0x00,0x01,0x00,0x00,0x00,0x30,0x61,0x00,0x00,0x00,0x00,0x00,0x00,
      0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x17,0x02,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x40,0x00,0x38,0x00,0x0b,0x00,0x40,0x00,0x1d,0x00,0x1c,0x00,
      0x06,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x68,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x68,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
      0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
  };

  //swap a byte to screw up the ELF magic string
  char x[]{
      0x7f,0x4c,0x45,0x46,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x03,0x00,0x3e,0x00,0x01,0x00,0x00,0x00,0x30,0x61,0x00,0x00,0x00,0x00,0x00,0x00,
      0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x17,0x02,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x40,0x00,0x38,0x00,0x0b,0x00,0x40,0x00,0x1d,0x00,0x1c,0x00,
      0x06,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x68,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x68,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
      0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
  };

  ElfBinary bin;

  SECTION( "verify magic number mismatch" ) {
    istringstream ist(x);
    CHECK_THROWS((ist >> bin));
  }

  SECTION( "verify magic number match" ) {
    istringstream ist(s);
    ist >> bin;
    cout << bin;
  }
}
